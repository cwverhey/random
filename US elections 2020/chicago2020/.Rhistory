lot    = 14*bal - 40
unknown = bal + 2*schoen * lot
if(unknown >= 0 || bal >=0 && schoen >= 0 && vlag >= 0 && lot >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 22 - 6*bal
lot    = 14*bal - 40
unknown = bal + 2*schoen * lot
if(unknown >= 0 || bal >=0 && schoen >= 0 && vlag >= 0 && lot >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 22 - 6*bal
lot    = 14*bal - 40
unknown = bal + 2*schoen * lot
if(unknown >= 0 || bal >=0 && schoen >= 0 && vlag >= 0 && lot >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
-5
int(-5)
integer(-5)
round(-5)
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 22 - 6*bal
lot    = 14*bal - 40
unknown = bal + 2*schoen * lot
if(unknown == round(unknown) && bal == round(bal) && schoen == round(schoen)) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown == round(unknown) && bal == round(bal) && schoen == round(schoen)) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.1)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.01)) {
bal    = i
schoen = 17 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.01)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 5 + schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
for(i in seq(-10000,10000,.01)) {
bal    = i
schoen = 11 - 4*bal
vlag   = 5 - schoen - 2*bal
lot    = 16 - vlag - 2*schoen
unknown = bal + 2*schoen * lot
if(unknown >= 0) {
cat(bal, schoen, vlag, lot, unknown,"\n")
}
}
# load CSV
us2020 <- read.csv("/Users/caspar/Desktop/US2020.csv")
# remove zero votes
us2020 <- subset(us2020, voteCount > 0)
# load CSV
us2020 <- read.csv("US2020.csv")
setwd("~/Progs/random/chicago2020")
# load CSV
us2020 <- read.csv("US2020.csv")
# remove zero votes
us2020 <- subset(us2020, voteCount > 0)
# get metadata
us2020$firstDigit <- factor(substr(us2020$voteCount,1,1), levels = 1:9)
states            <- unique(us2020$state)
candidates        <- unique(us2020$candidateName)
# load CSV
us2020 <- read.csv("US2020.csv")
# remove zero votes
us2020 <- subset(us2020, voteCount > 0)
# get metadata
us2020$firstDigit <- factor(substr(us2020$voteCount,1,1), levels = 1:9)
states            <- unique(us2020$state)
candidates        <- unique(us2020$candidateName)
# all vote counts
name <- "votes per candidate per subdivision (all candidates & subdivisions)"
data <- table(us2020$firstDigit)
barplot(data, main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
# all vote counts
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
# by candidate, all states
for(candidate in candidates) {
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
barplot(data, main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
# all vote counts
par(mfrow=c(1,1), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
# by candidate, all states
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(candidate in candidates) {
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
barplot(data, main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
# all vote counts
par(mfrow=c(1,1), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, log="y", ylim = c(1,max(data)), main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
# by candidate, all states
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(candidate in candidates) {
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
barplot(data, log="y", ylim = c(1,max(data)), main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
# by candidate, all states
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(candidate in candidates) {
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
# by state, all candidates
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(state in states) {
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
data
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
name <- state
data
# by state, all candidates
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(state in states) {
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
# by state, Trump v Biden
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(5,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(5,10), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(10,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(8,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(9,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(9,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
png(file="test.png", height=1800, width=1000)
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
}
dev.off()
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(9,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0(state,".png"), height=200, width=300)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(9,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0(state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0("TrumpvBiden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0("TrumpvBiden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(9,5), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0("Benford_Trump_v_Biden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0("Benford_Trump_v_Biden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
#png(file=paste0("Benford_Trump_v_Biden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
#dev.off()
}
}
# by state, all candidates
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(state in states) {
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
}
# by state, all candidates
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(state in states) {
png(file=paste0("Benford_States/",state,".png"), height=400, width=600)
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
for(state in states) {
png(file=paste0("Benford_States/",state,".png"), height=400, width=600)
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
# by candidate, all states
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(candidate in candidates) {
png(file=paste0("Benford_Candidates/",candidate,".png"), height=400, width=600)
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
# all vote counts
par(mfrow=c(1,1), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, log="y", ylim = c(1,max(data)), main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
# all vote counts
par(mfrow=c(1,1), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
png(file=paste0("Benford_all.png"), height=400, width=600)
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, log="y", ylim = c(1,max(data)), main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
dev.off()
# load CSV
us2020 <- read.csv("US2020.csv")
# remove zero votes
us2020 <- subset(us2020, voteCount > 0)
# get metadata
us2020$firstDigit <- factor(substr(us2020$voteCount,1,1), levels = 1:9)
states            <- unique(us2020$state)
candidates        <- unique(us2020$candidateName)
# all vote counts
par(mfrow=c(1,1), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
png(file=paste0("Benford_all.png"), height=400, width=600)
name <- "all candidates, all subdivisions"
data <- table(us2020$firstDigit)
barplot(data, log="y", ylim = c(1,max(data)), main=paste0(name," (n=",sum(data),")"), xlab="# of votes by first digit", ylab="frequency")
dev.off()
# by candidate, all states
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(candidate in candidates) {
png(file=paste0("Benford_Candidates/",candidate,".png"), height=400, width=600)
name <- candidate
data <- table(us2020$firstDigit[us2020$candidateName==candidate])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
# by state, all candidates
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0)) # set plot layout
for(state in states) {
png(file=paste0("Benford_States/",state,".png"), height=400, width=600)
name <- state
data <- table(us2020$firstDigit[us2020$state==state])
data[data==0] <- NA
barplot(data, log="y", ylim = c(1,max(data,na.rm=T)), main=paste0(name," (",sum(data,na.rm=T)," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
# by state, Trump v Biden (>10 subdivisions only)
par(mfrow=c(3,2), mar = c(3, 3, 3, 3), mgp = c(1.8,.7,0))  # set plot layout
for(state in states) {
if( length(unique(us2020$subunitID[us2020$state==state])) >= 10) {
png(file=paste0("Benford_Trump_v_Biden/",state,".png"), height=400, width=600)
name <- state
Trump <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Trump"])
Trump[Trump==0] <- NA
Biden <- table(us2020$firstDigit[us2020$state==state & us2020$candidateName=="Biden"])
Biden[Biden==0] <- NA
barplot(cbind(Trump,Biden), beside=T, col=c("#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#D31924","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2","#0091D2"), log="y", ylim = c(1,max(Biden,Trump,na.rm=T)), main=paste0("Trump v Biden, ",name," (",max(sum(Trump,na.rm=T),sum(Biden,na.rm=T))," subdivisions)"), xlab="# of votes, first digit", ylab="frequency")
dev.off()
}
}
